
=head1 NAME

Win32::GUI::Label - Create and manipulate label controls

=head1 DESCRIPTION

[TBD]

=for comment $Id: per_package_method_section.tpl,v 1.3 2006/03/16 21:11:13 robertemay Exp $

=head1 METHODS

L<Common methods|Win32::GUI::Reference::Methods> apply to most windows, controls and resources.

=for comment $Id: per_package_method.tpl,v 1.3 2006/03/16 21:11:13 robertemay Exp $

=head2 new

B<new(PARENT, %OPTIONS)>

Creates a new Label object;
can also be called as PARENT->AddLabel(%OPTIONS).

Class specific B<%OPTIONS> are:

   -align    => left/center/right (default left)
     Set text align.
   -bitmap   => Win32::GUI::Bitmap object
   -fill     => black/gray/white/none (default none)
      Fills the control rectangle ("black", "gray" and "white" are
      the window frame color, the desktop color and the window
      background color respectively).
   -frame    => black/gray/white/etched/none (default none)
      Draws a border around the control. colors are the same
      of -fill, with the addition of "etched" (a raised border).
   -icon     => Win32::GUI::Icon object
   -noprefix => 0/1 (default 0)
      Disables the interpretation of "&" as accelerator prefix.
   -notify   => 0/1 (default 0)
      Enables the Click(), DblClick, etc. events.
   -picture  => see -bitmap
   -sunken   => 0/1 (default 0)
      Draws a half-sunken border around the control.
   -truncate => 0/1/word/path (default 0)
      Specifies how the text is to be truncated:
         0 the text is not truncated
         1 the text is truncated at the end
        path the text is truncated before the last "\"
             (used to shorten paths).
   -wrap     => 0/1 (default 1)
      The text wraps automatically to a new line.
   -simple   => 0/1 (default 1)
      Set/Unset simple style.

See also the L<common options|Win32::GUI::Reference::Options>.

=for comment $Id: per_package_method.tpl,v 1.3 2006/03/16 21:11:13 robertemay Exp $

=head2 GetIcon

B<GetIcon()>

Retrieve a handle to the icon associated with a LABEL that has the SS_ICON style

=for comment $Id: per_package_method.tpl,v 1.3 2006/03/16 21:11:13 robertemay Exp $

=head2 GetImage

B<GetImage(type)>

Retrieve a handle to the image (icon or bitmap) associated with the button
type = IMAGE_BITMAP | IMAGE_ICON | IMAGE_CURSOR

=for comment $Id: per_package_method.tpl,v 1.3 2006/03/16 21:11:13 robertemay Exp $

=head2 SetIcon

B<SetIcon(ICON)>

Associate an icon with a LABEL that has the SS_ICON style

=for comment $Id: per_package_method.tpl,v 1.3 2006/03/16 21:11:13 robertemay Exp $

=head2 SetImage

B<SetImage(BITMAP)>

Draws the specified BITMAP in the Label.
BITMAP is assumed a Win32::GUI::Bitmap object by default.




=for comment $Id: per_package_event_section.tpl,v 1.3 2006/03/16 21:11:13 robertemay Exp $

=head1 EVENTS

L<Common events|Win32::GUI::Reference::Events> apply to most windows and controls.

=for comment $Id: per_package_event.tpl,v 1.3 2006/03/16 21:11:13 robertemay Exp $

=head2 Click

B<Click()>

[TBD]

=for comment $Id: per_package_event.tpl,v 1.3 2006/03/16 21:11:13 robertemay Exp $

=head2 DblClick

B<DblClick()>

[TBD]

=for comment $Id: per_package_event.tpl,v 1.3 2006/03/16 21:11:13 robertemay Exp $

=head2 Enable

B<Enable(State)>

Sent when the enable state Label change.





=for comment $Id: pod_postamble.tpl,v 1.2 2005/08/03 21:45:59 robertemay Exp $

=head1 VERSION

Documentation for Win32::GUI v1.06 created 17 Aug 2010

This document is autogenerated by the build process. Edits made here will be lost.
Edit F<docs/per_package.tpl> instead.

=head1 SUPPORT

Homepage: L<http://perl-win32-gui.sourceforge.net/>.

For further support join the users mailing list(C<perl-win32-gui-users@lists.sourceforge.net>) from the website
at L<http://lists.sourceforge.net/lists/listinfo/perl-win32-gui-users>.  There is a searchable list archive at L<http://sourceforge.net/mail/?group_id=16572>.

=head1 COPYRIGHT and LICENCE

Copyright (c) 1997..2010 Aldo Calpini. All rights reserved.

This program is free software; you can redistribute it and/or
modify it under the same terms as Perl itself.


